services:
  postgreSql:
    image: postgres:latest
    container_name: postgreSql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Tokyo
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
      - ./script/db-init/postgres:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  mongoDb:
    image: mongo:4.4.18
    container_name: mongoDb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      TZ: Asia/Tokyo
    volumes:
      - ./data/mongodb:/data/db
      - ./script/db-init/mongo:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  jojihouse-system:
    build:
      context: ./jojihouse-system
      dockerfile: Dockerfile
    container_name: jojihouse-system
    ports:
      - "8080:8080"
    depends_on:
      postgreSql:
        condition: service_healthy
      mongoDb:
        condition: service_healthy
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgreSql
      - POSTGRES_PORT=5432

      - MONGO_USER=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_DB=${MONGO_INITDB_DATABASE}
      - MONGO_HOST=mongoDb
      - MONGO_PORT=27017

      - WEBHOOK_URL=${WEBHOOK_URL}
      - WEBHOOK_USERNAME=${WEBHOOK_USERNAME}
      - WEBHOOK_AVATAR_URL=${WEBHOOK_AVATAR_URL}

      - GIN_MODE=release
    volumes:
      - ./log/jojihouse:/var/log/jojihouse
    restart: always

  # DBのバックアップ用サービス
  backup:
    # PostgreSQLとMongoDBのクライアントツールが含まれるイメージを使用
    build:
      context: ./script/db-backup
      dockerfile: Dockerfile
    image: jojihouse-db-backup:latest # ビルドしたイメージに名前を付ける
    container_name: jojihouse-db-backup
    # このサービスは常時起動しない
    restart: "no"
    volumes:
      # バックアップデータ保存用のNASをマウント
      - db-backup-nas:/backups/
      # - ./nas_mock:/backups
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: postgreSql # ネットワーク内のコンテナ名で接続
      PGPASSWORD: ${POSTGRES_PASSWORD}
      MONGO_HOST: mongoDb # ネットワーク内のコンテナ名で接続
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      postgreSql:
        condition: service_healthy
      mongoDb:
        condition: service_healthy

  # 定期実行を管理するスケジューラサービス (Ofelia)
  scheduler:
    build:
      context: ./docker/scheduler
      dockerfile: Dockerfile
    container_name: ofelia_scheduler
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: Asia/Tokyo
    labels:
      # sec min hour day month day_of_week
      # 毎時0分0秒にバックアップタスクを実行
      ofelia.job-local.backup-task.schedule: "0 0 * * * *"
      ofelia.job-local.backup-task.command: "docker start jojihouse-db-backup"


volumes:
  db-backup-nas:
    driver_opts:
      type: cifs
      o: "username=${BACKUP_NAS_USERNAME},password=${BACKUP_NAS_PASSWORD}"
      device: ${BACKUP_NAS_PATH}
